"""Initial schema

Revision ID: 20240730143000
Revises: None
Create Date: 2024-07-30 14:30:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Import postgresql for JSONB and ARRAY


# revision identifiers, used by Alembic.
revision: str = '20240730143000'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('domains',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('authority_score', sa.Float(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('spam_score', sa.Float(), nullable=True),
    sa.Column('registered_date', sa.DateTime(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('registrar', sa.String(), nullable=True),
    sa.Column('is_registered', sa.Boolean(), nullable=True),
    sa.Column('is_parked', sa.Boolean(), nullable=True),
    sa.Column('is_dead', sa.Boolean(), nullable=True),
    sa.Column('whois_raw', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dns_records', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('seo_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True), # Stored as JSONB
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_index(op.f('ix_domains_name'), 'domains', ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('organization_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    op.create_table('alert_rules',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('trigger_type', sa.String(), nullable=False),
    sa.Column('job_type_filter', sa.String(), nullable=True),
    sa.Column('target_url_pattern', sa.String(), nullable=True),
    sa.Column('metric_name', sa.String(), nullable=True),
    sa.Column('threshold_value', sa.Float(), nullable=True),
    sa.Column('comparison_operator', sa.String(), nullable=True),
    sa.Column('anomaly_type_filter', sa.String(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('channels', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('crawl_jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('target_url', sa.String(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('urls_crawled', sa.Integer(), nullable=True),
    sa.Column('links_found', sa.Integer(), nullable=True),
    sa.Column('errors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('results', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('cron_schedule', sa.String(), nullable=True),
    sa.Column('anomalies_detected', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('content_gap_analysis_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('target_url', sa.String(), nullable=False),
    sa.Column('competitor_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('missing_topics', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('missing_keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('content_format_gaps', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('actionable_insights', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('analysis_date', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_gap_analysis_results_target_url'), 'content_gap_analysis_results', ['target_url'], unique=False)

    op.create_table('keyword_suggestions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('keyword', sa.String(), nullable=False),
    sa.Column('search_volume', sa.Integer(), nullable=True),
    sa.Column('cpc', sa.Float(), nullable=True),
    sa.Column('competition', sa.Float(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('relevance', sa.Float(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('keyword_trend', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_keyword_suggestions_keyword'), 'keyword_suggestions', ['keyword'], unique=False)

    op.create_table('outreach_campaigns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('target_domains', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('total_prospects', sa.Integer(), nullable=True),
    sa.Column('contacts_made', sa.Integer(), nullable=True),
    sa.Column('replies_received', sa.Integer(), nullable=True),
    sa.Column('links_acquired', sa.Integer(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('report_jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('report_type', sa.String(), nullable=False),
    sa.Column('target_identifier', sa.String(), nullable=False),
    sa.Column('format', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('generated_file_path', sa.String(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('cron_schedule', sa.String(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('satellite_performance_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('satellite_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('pages_crawled', sa.Integer(), nullable=True),
    sa.Column('links_extracted', sa.Integer(), nullable=True),
    sa.Column('crawl_speed_pages_per_minute', sa.Float(), nullable=True),
    sa.Column('success_rate_percentage', sa.Float(), nullable=True),
    sa.Column('avg_response_time_ms', sa.Float(), nullable=True),
    sa.Column('cpu_utilization_percent', sa.Float(), nullable=True),
    sa.Column('memory_utilization_percent', sa.Float(), nullable=True),
    sa.Column('network_io_mbps', sa.Float(), nullable=True),
    sa.Column('errors_logged', sa.Integer(), nullable=True),
    sa.Column('bottlenecks_detected', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_satellite_performance_logs_satellite_id'), 'satellite_performance_logs', ['satellite_id'], unique=False)

    op.create_table('social_mentions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('mention_url', sa.String(), nullable=False),
    sa.Column('mention_text', sa.Text(), nullable=False),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=True),
    sa.Column('sentiment', sa.String(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mention_url')
    )
    op.create_index(op.f('ix_social_mentions_query'), 'social_mentions', ['query'], unique=False)

    op.create_table('urls',
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('domain_name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('content_length', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('redirect_url', sa.String(), nullable=True),
    sa.Column('canonical_url', sa.String(), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('crawl_status', sa.String(), nullable=True),
    sa.Column('crawl_date', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain_name'], ['domains.name'], ),
    sa.PrimaryKeyConstraint('url')
    )
    op.create_index(op.f('ix_urls_url'), 'urls', ['url'], unique=False)

    op.create_table('backlinks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('source_url', sa.String(), nullable=False),
    sa.Column('target_url', sa.String(), nullable=False),
    sa.Column('source_domain_name', sa.String(), nullable=False),
    sa.Column('target_domain_name', sa.String(), nullable=False),
    sa.Column('anchor_text', sa.String(), nullable=False),
    sa.Column('link_type', sa.String(), nullable=True),
    sa.Column('rel_attributes', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('context_text', sa.Text(), nullable=True),
    sa.Column('position_on_page', sa.Integer(), nullable=True),
    sa.Column('is_image_link', sa.Boolean(), nullable=True),
    sa.Column('alt_text', sa.String(), nullable=True),
    sa.Column('discovered_date', sa.DateTime(), nullable=True),
    sa.Column('last_seen_date', sa.DateTime(), nullable=True),
    sa.Column('authority_passed', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('spam_level', sa.String(), nullable=True),
    sa.Column('http_status', sa.Integer(), nullable=True),
    sa.Column('crawl_timestamp', sa.DateTime(), nullable=True),
    sa.Column('source_domain_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_domain_name'], ['domains.name'], ),
    sa.ForeignKeyConstraint(['target_domain_name'], ['domains.name'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_url', 'target_url', name='_source_target_uc')
    )

    op.create_table('domain_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('domain_name', sa.String(), nullable=False),
    sa.Column('snapshot_date', sa.DateTime(), nullable=False),
    sa.Column('authority_score', sa.Float(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('spam_score', sa.Float(), nullable=True),
    sa.Column('total_backlinks', sa.Integer(), nullable=True),
    sa.Column('referring_domains', sa.Integer(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain_name'], ['domains.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_domain_history_domain_name'), 'domain_history', ['domain_name'], unique=False)
    op.create_index(op.f('ix_domain_history_snapshot_date'), 'domain_history', ['snapshot_date'], unique=False)
    op.create_unique_constraint('_domain_snapshot_uc', 'domain_history', ['domain_name', 'snapshot_date'])

    op.create_table('domain_intelligence',
    sa.Column('domain_name', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('total_social_mentions', sa.Integer(), nullable=True),
    sa.Column('avg_sentiment_score', sa.Float(), nullable=True),
    sa.Column('top_social_platforms', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('avg_content_quality_score', sa.Float(), nullable=True),
    sa.Column('content_gaps_identified', sa.Integer(), nullable=True),
    sa.Column('avg_performance_score', sa.Float(), nullable=True),
    sa.Column('avg_accessibility_score', sa.Float(), nullable=True),
    sa.Column('broken_links_ratio', sa.Float(), nullable=True),
    sa.Column('estimated_traffic_trend', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('competitor_overlap_score', sa.Float(), nullable=True),
    sa.Column('social_data_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('content_data_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('technical_data_summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain_name'], ['domains.name'], ),
    sa.PrimaryKeyConstraint('domain_name')
    )
    op.create_index(op.f('ix_domain_intelligence_domain_name'), 'domain_intelligence', ['domain_name'], unique=False)

    op.create_table('link_profiles',
    sa.Column('target_url', sa.String(), nullable=False),
    sa.Column('target_domain_name', sa.String(), nullable=False),
    sa.Column('total_backlinks', sa.Integer(), nullable=True),
    sa.Column('unique_domains', sa.Integer(), nullable=True),
    sa.Column('dofollow_links', sa.Integer(), nullable=True),
    sa.Column('nofollow_links', sa.Integer(), nullable=True),
    sa.Column('authority_score', sa.Float(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('spam_score', sa.Float(), nullable=True),
    sa.Column('anchor_text_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('referring_domains', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('analysis_date', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['target_domain_name'], ['domains.name'], ),
    sa.PrimaryKeyConstraint('target_url')
    )
    op.create_index(op.f('ix_link_profiles_target_url'), 'link_profiles', ['target_url'], unique=False)

    op.create_table('link_prospects',
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('domain', sa.String(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('reasons', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('contact_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_outreach_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('discovered_date', sa.DateTime(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain'], ['domains.name'], ), # Assuming domain is a foreign key to domains.name
    sa.PrimaryKeyConstraint('url')
    )
    op.create_index(op.f('ix_link_prospects_url'), 'link_prospects', ['url'], unique=False)

    op.create_table('outreach_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('campaign_id', sa.String(), nullable=False),
    sa.Column('prospect_url', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['outreach_campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('seo_metrics',
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('http_status', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Float(), nullable=True),
    sa.Column('page_size_bytes', sa.Integer(), nullable=True),
    sa.Column('title_length', sa.Integer(), nullable=True),
    sa.Column('meta_description_length', sa.Integer(), nullable=True),
    sa.Column('h1_count', sa.Integer(), nullable=True),
    sa.Column('h2_count', sa.Integer(), nullable=True),
    sa.Column('internal_links', sa.Integer(), nullable=True),
    sa.Column('external_links', sa.Integer(), nullable=True),
    sa.Column('images_count', sa.Integer(), nullable=True),
    sa.Column('images_without_alt', sa.Integer(), nullable=True),
    sa.Column('has_canonical', sa.Boolean(), nullable=True),
    sa.Column('has_robots_meta', sa.Boolean(), nullable=True),
    sa.Column('has_schema_markup', sa.Boolean(), nullable=True),
    sa.Column('broken_links', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('mobile_friendly', sa.Boolean(), nullable=True),
    sa.Column('accessibility_score', sa.Float(), nullable=True),
    sa.Column('audit_timestamp', sa.DateTime(), nullable=True),
    sa.Column('seo_score', sa.Float(), nullable=True),
    sa.Column('issues', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('structured_data_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('og_title', sa.String(), nullable=True),
    sa.Column('og_description', sa.Text(), nullable=True),
    sa.Column('twitter_title', sa.String(), nullable=True),
    sa.Column('twitter_description', sa.Text(), nullable=True),
    sa.Column('validation_issues', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('ocr_text', sa.Text(), nullable=True),
    sa.Column('nlp_entities', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('nlp_sentiment', sa.String(), nullable=True),
    sa.Column('nlp_topics', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('last_fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['url'], ['urls.url'], ),
    sa.PrimaryKeyConstraint('url')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('seo_metrics')
    op.drop_table('outreach_events')
    op.drop_index(op.f('ix_link_prospects_url'), table_name='link_prospects')
    op.drop_table('link_prospects')
    op.drop_index(op.f('ix_link_profiles_target_url'), table_name='link_profiles')
    op.drop_table('link_profiles')
    op.drop_index(op.f('ix_domain_intelligence_domain_name'), table_name='domain_intelligence')
    op.drop_table('domain_intelligence')
    op.drop_index(op.f('ix_domain_history_snapshot_date'), table_name='domain_history')
    op.drop_index(op.f('ix_domain_history_domain_name'), table_name='domain_history')
    op.drop_table('domain_history')
    op.drop_table('backlinks')
    op.drop_index(op.f('ix_urls_url'), table_name='urls')
    op.drop_table('urls')
    op.drop_index(op.f('ix_social_mentions_query'), table_name='social_mentions')
    op.drop_table('social_mentions')
    op.drop_index(op.f('ix_satellite_performance_logs_satellite_id'), table_name='satellite_performance_logs')
    op.drop_table('satellite_performance_logs')
    op.drop_table('report_jobs')
    op.drop_table('outreach_campaigns')
    op.drop_index(op.f('ix_keyword_suggestions_keyword'), table_name='keyword_suggestions')
    op.drop_table('keyword_suggestions')
    op.drop_index(op.f('ix_content_gap_analysis_results_target_url'), table_name='content_gap_analysis_results')
    op.drop_table('content_gap_analysis_results')
    op.drop_table('crawl_jobs')
    op.drop_table('alert_rules')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_domains_name'), table_name='domains')
    op.drop_table('domains')
    # ### end Alembic commands ###
